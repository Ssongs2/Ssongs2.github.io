{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/study","result":{"pageContext":{"currentCategory":"study","categories":["All","블로그","study","solution","회고"],"edges":[{"node":{"id":"85d26411-8bfb-539a-a175-a307c4b47ada","excerpt":"얕은 복사(Shallow Copy) 객체가 담겨있는 변수를 다른 변수에 할당하면 call by reference (참조)가 일어난다.\n값이 담긴 주솟값들로 이루어진 묶음을 가리키는 주솟값을 복사한다.\n복사된 객체는 원본 객체의 주솟값을 참조하고 있는 것이다. 깊은 복사(Deep Copy) 독립적인 메모리에 값 자체를 할당하여 생성하는 것으로, 깊은 복사를 통해 원본의 객체와는 다른 고유한 객체를 생성한다. Object.assign() 사용법 Object.assign(생성할 객체, 원본 객체) 메서드의 첫 번째 인수로 빈 객체를 넣어주며,\n두 번째 인수로 할당할 객체를 넣어주면 된다. … (Spread Operator)…","fields":{"slug":"/js_copy/"},"frontmatter":{"categories":"study","title":"(javascript) 얕은 복사? 깊은 복사?","date":"December 17, 2021"}},"next":{"fields":{"slug":"/react/"}},"previous":null},{"node":{"id":"ff5a2b8e-1b7d-5341-96e9-ade98bda10f5","excerpt":"비동기 처리 생각대로 되지않아 열받을 찰나 비동기 처리에 대한 문제임을 발견하고, 각성하는 바 정리해본다. 1️⃣ 첫 번째 사례 ajax 콘솔 창 로그는 undefined가 찍힌다. 왜그럴까? 비동기 처리의 문제이다. 서버와 통신하는 ajax 객체가 응답을 받아오기 전에 출력한다. 2️⃣ 두 번째 사례 setTimeout(); 비동기 처리 개념을 모르고 해당 코드를 본다면 콘솔 창에는 “1”, “2”가 찍힌다고 생각할 것이다. 그런데 “2”, “1”이 찍힌다. setTimeout() 함수에서 3초 후에 “1”을 찍게 되어있는데, 이 로직을 기다려주지 않고 나머지 코드를 먼저 실행한다. javascript에서의 비동기 처리 위…","fields":{"slug":"/js_sync_async/"},"frontmatter":{"categories":"study","title":"(javascript) 동기? 비동기?","date":"July 28, 2021"}},"next":{"fields":{"slug":"/gatsby-github-blog/"}},"previous":{"fields":{"slug":"/react/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}