{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"0468f233-f289-5559-8da4-cb645f796c4b","excerpt":"flatform: flat(편평한) + form(형식)의 합성어   하드웨어나 소프트웨어의 분야에서는 “기반 환경”이나 “기술 환경”을 의미한다. \n하드웨어에서 플랫폼이란 표준공정을 통해 다양한 제품을 만들어내는 기반과 도구를 지칭한다. 예를들어, 애플의 A지사와 B지사에서 만들어내는 프로세스와 물리적 장치가 같은 것이 플랫폼인 것이다. \n소프트웨어 플랫…","frontmatter":{"categories":"study","title":"(common_flatform) 여기저기서 플랫폼 👥 어쩌구 🗣 플랫폼 저쩌구","date":"January 24, 2022"},"fields":{"slug":"/common_platform/"}}},{"node":{"id":"eca64da5-827a-55b5-80ab-837ac373a404","excerpt":"🤷🏻‍♀️ 엄마 가지 - 1월 06일에 작성한’(React) 렌더링을 언제 하길래 데이터 변경이 안돼?’ 포스팅에서 렌더링의 뜻을 정의하였다. 렌더링이란 ‘리액트 앨리먼트를 html 형태로 변환하여 화면에 그려지는 것.’\n정확히 앨리먼트라는 게 뭘까?하면서 알아보는 글 Element와 React Element Element란 html에서 태그로 적은 노드들을 지…","frontmatter":{"categories":"study","title":"(common_element) What is Element?","date":"January 21, 2022"},"fields":{"slug":"/common_element/"}}},{"node":{"id":"18bf00c4-61e3-56e1-8d8b-fc769c2add8b","excerpt":"css_flex","frontmatter":{"categories":"study","title":"(CSS) 레이아웃 구조를 잡아보자.","date":"January 21, 2022"},"fields":{"slug":"/css_flex/"}}},{"node":{"id":"bcb8b5ce-d855-56d2-941d-9438403f5838","excerpt":"Essential How to use git Git init: 프로젝트 폴더에 .git 폴더를 생성 초기화한다. .gitignore: 숨김파일로 존재. 깃에 올리지 않을 폴더나 파일들을 관리. 절대 올리지 않을 파일을 미리 작성 Git remote: 로컬 폴더와 git 레포지토리를 연결한다. ( git remote add origin .git) Git s…","frontmatter":{"categories":"study","title":"(common_git) Essential How to use git","date":"January 19, 2022"},"fields":{"slug":"/common_git/"}}},{"node":{"id":"d9b07ff5-d33b-55ab-97c4-173264d1831a","excerpt":"누군가 나한테 물어본 질문   👨🏼‍🦱 : JSX를 쓰면 새로고침이 안되니까 이 JSX를 이용해서 데이터를 묶어둘 수 있지않아? 🙋🏻‍♀️ : 네??? JSX는 그냥 문법일 뿐인데   까지 얘기함; 새로고침은 JSX와 관련이 없습니다.하고 SPA를 멋드러지게 설명 하고싶었어요.   SPA(Single Page Application) 모든 정적 리소스를 최초 접근 시 …","frontmatter":{"categories":"study","title":"(javascript) SPA는 뭐야뭐야뭐야뭐야~?","date":"January 11, 2022"},"fields":{"slug":"/js_spa/"}}},{"node":{"id":"cd2eb3e4-6d58-5693-aaf1-f662ad0b5360","excerpt":"렌더링이란? 리액트 앨리먼트를 html 형태로 변환하여 화면에 그려지는 것   렌더링 이슈 리덕스를 사용해서 state 상태관리를 하는데, setState로 렌더링을 한 번 더 하게하는 코드를 발견했다. setState를 지우니 자식컴포넌트 그리드의 데이터가 바인딩이 되지 않는다. (!?) 문제의 코드   AComponent 🥊 React가 렌더링을 실행…","frontmatter":{"categories":"solution","title":"(React) 렌더링을 언제 하길래 데이터 변경이 안돼?","date":"January 06, 2022"},"fields":{"slug":"/react_render/"}}},{"node":{"id":"85d26411-8bfb-539a-a175-a307c4b47ada","excerpt":"얕은 복사(Shallow Copy) 객체가 담겨있는 변수를 다른 변수에 할당하면 call by reference (참조)가 일어난다. 값이 담긴 주솟값들로 이루어진 묶음을 가리키는 주솟값을 복사한다. 복사된 객체는 원본 객체의 주솟값을 참조하고 있는 것이다.   깊은 복사(Deep Copy) 독립적인 메모리에 값 자체를 할당하여 생성하는 것으로, 깊은 복…","frontmatter":{"categories":"study","title":"(javascript) 얕은 복사? 깊은 복사?","date":"December 17, 2021"},"fields":{"slug":"/js_copy/"}}},{"node":{"id":"96446fc0-9f9d-5430-8ea6-5c9f61652a4a","excerpt":"문제 부모로부터 내려받은 props의 값을, 자식의 componentWillReceiveProps 함수에서,\nthis.props와 nextProps의 값을 디버깅해보면 언제나 똑같다. 💡 구글링 https://stackoverflow.com/questions/47227329/componentwillreceiveprops-this-props-and-next…","frontmatter":{"categories":"solution","title":"(React) componentWillReceiveProps - this.props and nextProps always same","date":"December 16, 2021"},"fields":{"slug":"/react/"}}},{"node":{"id":"ff5a2b8e-1b7d-5341-96e9-ade98bda10f5","excerpt":"비동기 처리 생각대로 되지않아 열받을 찰나 비동기 처리에 대한 문제임을 발견하고, 각성하는 바 정리해본다. 1️⃣ 첫 번째 사례 ajax 콘솔 창 로그는 undefined가 찍힌다. 왜그럴까? 비동기 처리의 문제이다. 서버와 통신하는 ajax 객체가 응답을 받아오기 전에 출력한다. 2️⃣ 두 번째 사례 setTimeout(); 비동기 처리 개념을 모르고 해당 코…","frontmatter":{"categories":"study","title":"(javascript) 동기? 비동기?","date":"July 28, 2021"},"fields":{"slug":"/js_sync_async/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"ssongs2","bio":{"role":"개발자","description":["문제가 생기면 답을 찾는","중심이 있는","재밌게 하는"],"thumbnail":"ssongs2.gif"},"social":{"github":"https://github.com/Ssongs2","linkedIn":"https://www.linkedin.com/in/jinhyeok-jeong-800871192","email":"sejeq1995@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1562467322","2938748437"]}